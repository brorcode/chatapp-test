services:
    # PHP Service
    app:
        build:
            context: ./docker/php
            dockerfile: Dockerfile
        container_name: laravel_app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - .:/var/www
            - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - laravel_network

    # Nginx Service
    webserver:
        build:
            context: ./docker/nginx
            dockerfile: Dockerfile
        container_name: laravel_webserver
        restart: unless-stopped
        ports:
            - "8080:80"
        volumes:
            - .:/var/www
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        networks:
            - laravel_network

    # MySQL Service
    db:
        image: mysql:8.0
        container_name: laravel_db
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: root_password
            MYSQL_DATABASE: laravel
            MYSQL_USER: laravel_user
            MYSQL_PASSWORD: 12345
        ports:
            - "3306:3306"
        volumes:
            - dbdata:/var/lib/mysql
        networks:
            - laravel_network
        command: --default-authentication-plugin=mysql_native_password

    # MySQL Test Service
    db_test:
        image: mysql:8.0
        container_name: laravel_db_test
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: root_password
            MYSQL_DATABASE: laravel_testing
            MYSQL_USER: laravel_user
            MYSQL_PASSWORD: 12345
        ports:
            - "3307:3306"
        volumes:
            - dbdata_test:/var/lib/mysql
        networks:
            - laravel_network
        command: --default-authentication-plugin=mysql_native_password

# Networks
networks:
    laravel_network:
        driver: bridge

# Volumes
volumes:
    dbdata:
    dbdata_test:
